{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\projects\\\\CursProject\\\\frontend\\\\src\\\\components\\\\UI\\\\Forms\\\\pop_up\\\\ProgLangs.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport classes from './ProgLangs.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgLangs = programmingLang => {\n  _s();\n  const [options, setOptions] = useState([]); // Состояние для данных из Django API\n  const [selectedValues, setSelectedValues] = useState([]); // Состояние для выбранных значений\n\n  useEffect(() => {\n    // Получение данных из Django API при монтировании компонента\n    axios.get('http://127.0.0.1:8000/programming-languages/').then(response => {\n      setOptions(response.data); // Установка данных в состояние\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const handleCheckboxChange = event => {\n    const value = event.target.value;\n    if (event.target.checked) {\n      setSelectedValues([...selectedValues, value]); // Добавление выбранного значения в состояние\n    } else {\n      setSelectedValues(selectedValues.filter(val => val !== value)); // Удаление выбранного значения из состояния\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: classes.title,\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043D\\u0435 \\u043C\\u0435\\u043D\\u044C\\u0448\\u0435 3 \\u044F\\u0437\\u044B\\u043A\\u043E\\u0432 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.input,\n            type: \"checkbox\",\n            value: option.name,\n            checked: selectedValues.includes(option.name),\n            onChange: e => handleCheckboxChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), option.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435 \\u044F\\u0437\\u044B\\u043A\\u0438: \", selectedValues.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgLangs, \"BcCc5+wPlCnfA6ENgKaiROYN9iA=\");\n_c = ProgLangs;\nexport default ProgLangs;\nvar _c;\n$RefreshReg$(_c, \"ProgLangs\");","map":{"version":3,"names":["useEffect","useState","React","axios","classes","jsxDEV","_jsxDEV","ProgLangs","programmingLang","_s","options","setOptions","selectedValues","setSelectedValues","get","then","response","data","catch","error","console","log","handleCheckboxChange","event","value","target","checked","filter","val","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","map","option","input","type","name","includes","onChange","e","id","join","_c","$RefreshReg$"],"sources":["D:/Programming/projects/CursProject/frontend/src/components/UI/Forms/pop_up/ProgLangs.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport classes from './ProgLangs.module.css'\r\n\r\nconst ProgLangs = (programmingLang) => {\r\n\r\n    const [options, setOptions] = useState([]); // Состояние для данных из Django API\r\n    const [selectedValues, setSelectedValues] = useState([]); // Состояние для выбранных значений\r\n\r\n    useEffect(() => {\r\n    // Получение данных из Django API при монтировании компонента\r\n    axios.get('http://127.0.0.1:8000/programming-languages/')\r\n      .then(response => {\r\n        setOptions(response.data); // Установка данных в состояние\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    const value = event.target.value;\r\n    if (event.target.checked) {\r\n      setSelectedValues([...selectedValues, value]); // Добавление выбранного значения в состояние\r\n    } else {\r\n      setSelectedValues(selectedValues.filter(val => val !== value)); // Удаление выбранного значения из состояния\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <h4 className={classes.title}>Выберите не меньше 3 языков программирования:</h4>\r\n        <div className={classes.content}>\r\n            {options.map(option => (\r\n                <div key={option.id}>\r\n                    <label>\r\n                    <input\r\n                        className={classes.input}\r\n                        type=\"checkbox\"\r\n                        value={option.name}\r\n                        checked={selectedValues.includes(option.name)}\r\n                        onChange={(e) => handleCheckboxChange(e)}\r\n                    />\r\n                    {option.name}</label>\r\n                </div>\r\n            ))}\r\n        </div>\r\n      <p>Выбранные языки: {selectedValues.join(', ')}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgLangs;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}