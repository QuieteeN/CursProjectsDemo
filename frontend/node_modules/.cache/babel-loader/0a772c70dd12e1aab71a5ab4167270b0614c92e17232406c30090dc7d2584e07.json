{"ast":null,"code":"export function validateUsername(username) {\n  const VALID_CHARACTERS = /^[a-zA-Z0-9]+$/.test(username),\n    // проверка на соответсвующие символы\n    NOT_NULL = username !== '',\n    // проверка на пустое значение\n    VALID_LENGTH = username.length < 3 || username.length > 20; // проверка на соответствие длины\n\n  // результат валидации\n  return VALID_CHARACTERS && NOT_NULL && VALID_LENGTH;\n}\nexport function validatePassword(password) {\n  const VALID_LENGTH = password.length >= 8,\n    // проверка на соответствие длины \n    HAS_UPPERCASE = /[A-Z]/.test(password),\n    // имеет хотя б одну прописную букву\n    HAS_LOWERCASE = /[a-z]/.test(password),\n    // имеет хотя б одну строчную букву\n    HAS_NUMBER = /\\d/.test(password); // имеет хотя б одну цифру\n\n  // Возвращаем результат валидации\n  return VALID_LENGTH && HAS_UPPERCASE && HAS_LOWERCASE && HAS_NUMBER;\n}\nexport function validateEmail(email) {\n  const VALID_REGEX = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email); // проверка на совпадение символов\n\n  // возвращает результат\n  return VALID_REGEX;\n}\nexport function validateField(checkboxCheckedCount) {\n  const VALID_COUNT = checkboxCheckedCount >= 3; // проверка на совпадение количества выбранных\n\n  return VALID_COUNT;\n}\nexport function validatePasswordConfirmation(password, confirmPassword) {\n  return password === confirmPassword;\n}","map":{"version":3,"names":["validateUsername","username","VALID_CHARACTERS","test","NOT_NULL","VALID_LENGTH","length","validatePassword","password","HAS_UPPERCASE","HAS_LOWERCASE","HAS_NUMBER","validateEmail","email","VALID_REGEX","validateField","checkboxCheckedCount","VALID_COUNT","validatePasswordConfirmation","confirmPassword"],"sources":["D:/Programming/projects/CursProject/frontend/src/validation.js"],"sourcesContent":["export function validateUsername(username) {\r\n\r\n\r\n    const   VALID_CHARACTERS  = /^[a-zA-Z0-9]+$/.test(username),                // проверка на соответсвующие символы\r\n            NOT_NULL          = (username !== ''),                                // проверка на пустое значение\r\n            VALID_LENGTH      = username.length < 3 || username.length > 20;    // проверка на соответствие длины\r\n\r\n    // результат валидации\r\n    return (VALID_CHARACTERS && NOT_NULL && VALID_LENGTH);\r\n}\r\n\r\nexport function validatePassword(password) {\r\n    \r\n\r\n    const   VALID_LENGTH    = password.length >= 8,     // проверка на соответствие длины \r\n            HAS_UPPERCASE   = /[A-Z]/.test(password),   // имеет хотя б одну прописную букву\r\n            HAS_LOWERCASE   = /[a-z]/.test(password),   // имеет хотя б одну строчную букву\r\n            HAS_NUMBER      = /\\d/.test(password);      // имеет хотя б одну цифру\r\n    \r\n    // Возвращаем результат валидации\r\n    return (\r\n      VALID_LENGTH &&\r\n      HAS_UPPERCASE &&\r\n      HAS_LOWERCASE &&\r\n      HAS_NUMBER\r\n    );\r\n}\r\n\r\nexport function validateEmail(email) {\r\n    \r\n    const VALID_REGEX = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);   // проверка на совпадение символов\r\n    \r\n    // возвращает результат\r\n    return VALID_REGEX;\r\n}\r\n\r\nexport function validateField(checkboxCheckedCount) {\r\n\r\n    const VALID_COUNT = checkboxCheckedCount >= 3;  // проверка на совпадение количества выбранных\r\n  \r\n    return VALID_COUNT;\r\n}\r\n\r\nexport function validatePasswordConfirmation(password, confirmPassword) {\r\n    return password === confirmPassword;\r\n}\r\n  "],"mappings":"AAAA,OAAO,SAASA,gBAAgBA,CAACC,QAAQ,EAAE;EAGvC,MAAQC,gBAAgB,GAAI,gBAAgB,CAACC,IAAI,CAACF,QAAQ,CAAC;IAAiB;IACpEG,QAAQ,GAAaH,QAAQ,KAAK,EAAG;IAAiC;IACtEI,YAAY,GAAQJ,QAAQ,CAACK,MAAM,GAAG,CAAC,IAAIL,QAAQ,CAACK,MAAM,GAAG,EAAE,CAAC,CAAI;;EAE5E;EACA,OAAQJ,gBAAgB,IAAIE,QAAQ,IAAIC,YAAY;AACxD;AAEA,OAAO,SAASE,gBAAgBA,CAACC,QAAQ,EAAE;EAGvC,MAAQH,YAAY,GAAMG,QAAQ,CAACF,MAAM,IAAI,CAAC;IAAM;IAC5CG,aAAa,GAAK,OAAO,CAACN,IAAI,CAACK,QAAQ,CAAC;IAAI;IAC5CE,aAAa,GAAK,OAAO,CAACP,IAAI,CAACK,QAAQ,CAAC;IAAI;IAC5CG,UAAU,GAAQ,IAAI,CAACR,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAM;;EAEpD;EACA,OACEH,YAAY,IACZI,aAAa,IACbC,aAAa,IACbC,UAAU;AAEhB;AAEA,OAAO,SAASC,aAAaA,CAACC,KAAK,EAAE;EAEjC,MAAMC,WAAW,GAAG,4BAA4B,CAACX,IAAI,CAACU,KAAK,CAAC,CAAC,CAAG;;EAEhE;EACA,OAAOC,WAAW;AACtB;AAEA,OAAO,SAASC,aAAaA,CAACC,oBAAoB,EAAE;EAEhD,MAAMC,WAAW,GAAGD,oBAAoB,IAAI,CAAC,CAAC,CAAE;;EAEhD,OAAOC,WAAW;AACtB;AAEA,OAAO,SAASC,4BAA4BA,CAACV,QAAQ,EAAEW,eAAe,EAAE;EACpE,OAAOX,QAAQ,KAAKW,eAAe;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}